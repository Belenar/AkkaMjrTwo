akka {
    loglevel = DEBUG
    loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
    actor {
        creation-timeout = 30s
        ask-timeout = 50s
        serializers {
            json = "AkkaMjrTwo.GameEngine.Infrastructure.EventSerializer, AkkaMjrTwo.GameEngine"
            bytes = "Akka.Serialization.ByteArraySerializer, Akka"
        }
        serialization-bindings {
            "System.Byte[]" = bytes
            "System.Object" = json
        }
    }
}
akka.persistence {
    journal {
        plugin = "akka.persistence.journal.sql-server"
        sql-server {
            # qualified type name of the SQL Server persistence journal actor
            class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"

            # dispatcher used to drive journal actor
            plugin-dispatcher = "akka.actor.default-dispatcher"
            
            # connection string used for database access
            connection-string = "Data Source=localhost;Initial Catalog=AkkaMjrTwo;User ID=sa;Password=Jorgecampos01;"

            # default SQL commands timeout
            connection-timeout = 30s

            # SQL server schema name to table corresponding with persistent journal
            schema-name = Event

            # SQL server table corresponding with persistent journal
            table-name = Events

            # should corresponding journal table be initialized automatically
            auto-initialize = off
        
            # timestamp provider used for generation of journal entries timestamps
            timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"

            # metadata table
            metadata-table-name = Metadata
        }
    }
}

